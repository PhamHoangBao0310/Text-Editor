/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import java.awt.Color;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;

/**
 *
 * @author DELL
 */
public class FindBox extends javax.swing.JFrame {

    final static Highlighter.HighlightPainter YELLOWPAINTER = new DefaultHighlighter.DefaultHighlightPainter(Color.yellow);
    /**
     * Creates new form FindBox
     */
    TextEditor editor;
    int findingIndex = -1;
    String currFindText = "";

    public String getCurrFindText() {
        return currFindText;
    }

    public void setCurrFindText(String currFindText) {
        this.currFindText = currFindText;
    }

    public FindBox() {
        initComponents();
    }

    public int getFindingIndex() {
        return findingIndex;
    }

    public void setFindingIndex(int findingIndex) {
        this.findingIndex = findingIndex;
    }

    public FindBox(TextEditor editor, int index) {
        initComponents();
        this.editor = editor;
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                editor.getTxtMainText().getHighlighter().removeAllHighlights();
            }
        });
        this.setTitle("Find and Replace");
        myTabbedPane.setSelectedIndex(index);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtTextFind = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnFind = new javax.swing.JButton();
        btnFindNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtFindToReplace = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtReplaceWord = new javax.swing.JTextField();
        btnReplace = new javax.swing.JButton();
        btnReplaceNext = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Enter text to find :");

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnFindNext.setText("Find Next");
        btnFindNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(txtTextFind, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFind, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnFindNext)
                .addGap(48, 48, 48))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTextFind, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFind)
                    .addComponent(btnFindNext))
                .addGap(50, 50, 50))
        );

        myTabbedPane.addTab("Find", jPanel1);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Find what:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Replace with:");

        btnReplace.setText("Replace All");
        btnReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceActionPerformed(evt);
            }
        });

        btnReplaceNext.setText("Replace Next");
        btnReplaceNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceNextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFindToReplace, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addComponent(txtReplaceWord))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(247, Short.MAX_VALUE)
                .addComponent(btnReplaceNext)
                .addGap(35, 35, 35)
                .addComponent(btnReplace)
                .addGap(63, 63, 63))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFindToReplace, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReplaceWord, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReplace)
                    .addComponent(btnReplaceNext))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        myTabbedPane.addTab("Replace", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myTabbedPane)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        editor.getTxtMainText().getHighlighter().removeAllHighlights();
        String findText = txtTextFind.getText();
        String mainText = editor.getTxtMainText().getText();
        if (findText.trim().equals("") || mainText.trim().equals("")) {
            return;
        }
        System.out.println(findText);
        System.out.println(mainText);
        int index = mainText.indexOf(findText);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "No word found");
        } else {
            while (index >= 0) {
                System.out.println(index);
                try {
                    editor.getTxtMainText().getHighlighter().addHighlight(index, index + findText.length(), YELLOWPAINTER);
                } catch (BadLocationException ex) {
                    ex.printStackTrace();
                }
                index = mainText.indexOf(findText, index + findText.length());
            }
        }
    }//GEN-LAST:event_btnFindActionPerformed
//editor.getTxtMainText().getHighlighter().addHighlight(index, index + findText.length(), YELLOWPAINTER);
    private void btnReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceActionPerformed
        // TODO add your handling code here:
        String findText = txtFindToReplace.getText();
        String mainText = editor.getTxtMainText().getText();
        String replaceText = txtReplaceWord.getText();
        if (findText.trim().equals("") || replaceText.trim().equals("") || mainText.trim().equals("")) {
            return;
        }
        if (findText.trim().equals(replaceText.trim())) {
            return;
        }
        int index = mainText.indexOf(findText);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "No word found to replace");
        } else {
            while (index >= 0) {
                editor.getTxtMainText().replaceRange(replaceText, index, index + findText.length());
                mainText = editor.getTxtMainText().getText();
                index = mainText.indexOf(findText);
            }
        }
    }//GEN-LAST:event_btnReplaceActionPerformed

    private void btnFindNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNextActionPerformed
        // TODO add your handling code here:
        if (this.getCurrFindText().equals("") || (!txtTextFind.getText().equals(this.getCurrFindText()))) {
            this.setFindingIndex(-1);
            this.setCurrFindText(txtTextFind.getText());
        }
        editor.getTxtMainText().getHighlighter().removeAllHighlights();
        String findText = txtTextFind.getText();
        String mainText = editor.getTxtMainText().getText();
        if (findText.trim().equals("") || mainText.trim().equals("")) {
            return;
        }
        int currIndex = this.getFindingIndex();
        int index = mainText.indexOf(findText, currIndex);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "No word found");
            this.setFindingIndex(-1);
        } else {
            System.out.println(index);
            try {
                editor.getTxtMainText().getHighlighter().addHighlight(index, index + findText.length(), YELLOWPAINTER);
            } catch (BadLocationException ex) {
                ex.printStackTrace();
            }
            this.setFindingIndex(index + findText.length());
        }
    }//GEN-LAST:event_btnFindNextActionPerformed

    private void btnReplaceNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceNextActionPerformed
        // TODO add your handling code here:
        String findText = txtFindToReplace.getText();
        String mainText = editor.getTxtMainText().getText();
        String replaceText = txtReplaceWord.getText();
        if (findText.trim().equals("") || replaceText.trim().equals("") || mainText.trim().equals("")) {
            return;
        }
        if (findText.trim().equals(replaceText.trim())) {
            return;
        }
        int index = mainText.indexOf(findText);
        if (index < 0) {
            JOptionPane.showMessageDialog(this, "No word found to replace");
        } else {
            editor.getTxtMainText().replaceRange(replaceText, index, index + findText.length());
        }
    }//GEN-LAST:event_btnReplaceNextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FindBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FindBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FindBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FindBox.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FindBox().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnFindNext;
    private javax.swing.JButton btnReplace;
    private javax.swing.JButton btnReplaceNext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane myTabbedPane;
    private javax.swing.JTextField txtFindToReplace;
    private javax.swing.JTextField txtReplaceWord;
    private javax.swing.JTextField txtTextFind;
    // End of variables declaration//GEN-END:variables
}
